// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Filter should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Filter
    filter="test"
    handleChange={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="sr-only"
        >
          Search:
        </span>,
        <input
          className="c-filter__input"
          id="filter"
          onChange={[MockFunction]}
          placeholder="Search..."
          type="search"
          value="test"
        />,
      ],
      "className": "c-filter",
      "htmlFor": "filter",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Search:",
          "className": "sr-only",
        },
        "ref": null,
        "rendered": "Search:",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "c-filter__input",
          "id": "filter",
          "onChange": [MockFunction],
          "placeholder": "Search...",
          "type": "search",
          "value": "test",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "label",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="sr-only"
          >
            Search:
          </span>,
          <input
            className="c-filter__input"
            id="filter"
            onChange={[MockFunction]}
            placeholder="Search..."
            type="search"
            value="test"
          />,
        ],
        "className": "c-filter",
        "htmlFor": "filter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Search:",
            "className": "sr-only",
          },
          "ref": null,
          "rendered": "Search:",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "c-filter__input",
            "id": "filter",
            "onChange": [MockFunction],
            "placeholder": "Search...",
            "type": "search",
            "value": "test",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "label",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
