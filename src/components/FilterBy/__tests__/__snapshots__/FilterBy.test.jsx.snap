// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterBy should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterBy
    filterBy="test"
    handleChange={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <option
          value="name"
        >
          Name
        </option>,
        <option
          value="city"
        >
          City
        </option>,
      ],
      "className": "c-filter-by",
      "onChange": [MockFunction],
      "value": "test",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Name",
          "value": "name",
        },
        "ref": null,
        "rendered": "Name",
        "type": "option",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "City",
          "value": "city",
        },
        "ref": null,
        "rendered": "City",
        "type": "option",
      },
    ],
    "type": "select",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <option
            value="name"
          >
            Name
          </option>,
          <option
            value="city"
          >
            City
          </option>,
        ],
        "className": "c-filter-by",
        "onChange": [MockFunction],
        "value": "test",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Name",
            "value": "name",
          },
          "ref": null,
          "rendered": "Name",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "City",
            "value": "city",
          },
          "ref": null,
          "rendered": "City",
          "type": "option",
        },
      ],
      "type": "select",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
